{
  "Fast input and output for C++": {
    "scope": "cpp",
    "prefix": "tie",
    "body": ["ios_base::sync_with_stdio(false);", "cin.tie(NULL);"],
    "description": "Fast input and output for C++"
  },

  "Template for problems from CodeForces (C++)": {
    "scope": "cpp",
    "prefix": "codeforces",
    "body": [
      "/* 1A. <name> */",
      "// <link>",
      "// Date: ",
      "// Run time: ",
      "// Memory: ",
      "// Verdict: "
    ],
    "description": "Template for problems from CodeForces"
  },

  "Template for problems from CodeForces (Python)": {
    "scope": "python",
    "prefix": "codeforces",
    "body": [
      "''' 1A. <name> '''",
      "# <link>",
      "# Date: ",
      "# Run time: ",
      "# Memory: ",
      "# Verdict: "
    ],
    "description": "Template for problems from CodeForces"
  },

  "Template for problems from UVa Online Judge (C++)": {
    "scope": "cpp",
    "prefix": "uva",
    "body": [
      "/* UVa 1 - <name> */",
      "// <link>",
      "// Date: ",
      "// Run time: ",
      "// Verdict: "
    ],
    "description": "Template for problems from UVa Online Judge (C++)"
  },

  "Redirect input.txt to stdin": {
    "scope": "cpp",
    "prefix": "freopen-in",
    "body": [
      "#ifdef LOCALENV",
      "freopen(\"/home/leksus/competitive-programming/IO/input.txt\", \"r\", stdin);",
      "#endif",
      ""
    ],
    "description": "Redirect input.txt to stdin"
  },

  "Redirect stdout to output.txt": {
    "scope": "cpp",
    "prefix": "freopen-out",
    "body": [
      "#ifdef LOCALENV",
      "freopen(\"/home/leksus/competitive-programming/IO/output.txt\", \"w\", stdout);",
      "#endif",
      ""
    ],
    "description": "Redirect stdout to output.txt"
  },

  "Redirect i/o to input.txt and output.txt": {
    "scope": "cpp",
    "prefix": "freopen-all",
    "body": [
      "#ifdef LOCALENV",
      "freopen(\"/home/leksus/competitive-programming/IO/input.txt\", \"r\", stdin);",
      "freopen(\"/home/leksus/competitive-programming/IO/output.txt\", \"w\", stdout);",
      "#endif",
      ""
    ],
    "description": "Redirect i/o to input.txt and output.txt"
  },

  "Redirect i/o with ONLINE_JUDGE macros": {
    "scope": "cpp",
    "prefix": "ONLINE_JUDGE",
    "body": [
      "#ifdef ONLINE_JUDGE",
      "freopen(\"${1:/* filename */}.in\", \"r\", stdin);",
      "freopen(\"${1:/* filename */}.out\", \"w\", stdout);",
      "#endif",
      ""
    ],
    "description": "Redirect i/o with ONLINE_JUDGE macros"
  },

  "Pragmas that *should* optimize the code": {
    "scope": "cpp",
    "prefix": "#pragma",
    "body": [
      "#pragma GCC optimize(\"O3,unroll-loops\")",
      "#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")",
      ""
    ],
    "description": "Pragmas that *should* optimize the code"
  },

  "Hash function for pairs to use in standart containers": {
    "scope": "cpp",
    "prefix": "hashpair",
    "body": [
      "struct hash_pair {",
      "    template <class T1, class T2>",
      "    size_t operator()(const pair<T1, T2>& p) const {",
      "        uintmax_t hash = std::hash<T1>{}(p.first);",
      "        hash <<= sizeof(uintmax_t) * 4;",
      "        hash ^= std::hash<T2>{}(p.second);",
      "        return std::hash<uintmax_t>{}(hash);",
      "    }",
      "};"
    ],
    "description": "Hash function for pairs to use in standart containers"
  },

  "Ready-to-go template for C++": {
    "scope": "cpp",
    "prefix": "cpptemplate",
    "body": [
      "// #ifndef LOCALENV",
      "// #pragma GCC optimize(\"O3,unroll-loops\")",
      "// #pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")",
      "// #endif",
      "",
      "#include <bits/stdc++.h>",
      "using namespace std;",
      "typedef long long ll;",
      "typedef long double ld;",
      "// #define int ll",
      "typedef pair<int, int> ii;",
      "typedef vector<int> vi;",
      "",
      "void solve() {",
      "    ${1:/* Your code */}",
      "}",
      "",
      "signed main() {",
      "#ifdef LOCALENV",
      "    freopen(\"/home/leksus/competitive-programming/IO/input.txt\", \"r\", stdin);",
      "#endif",
      "    ios_base::sync_with_stdio(false);",
      "    cin.tie(NULL);",
      "    int TC = 1;",
      "    // cin >> TC;",
      "    while (TC--) {",
      "        solve();",
      "    }",
      "    cout.flush();",
      "}"
    ],
    "description": "Ready-to-go template for C++"
  }
}
